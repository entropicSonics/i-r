{
  "version": 3,
  "sources": ["../../.pnpm/@lexical+react@0.14.2_lexical@0.14.2_react-dom@18.2.0_react@18.2.0_yjs@13.6.14/node_modules/@lexical/react/LexicalOnChangePlugin.dev.esm.js", "../../.pnpm/@lexical+react@0.14.2_lexical@0.14.2_react-dom@18.2.0_react@18.2.0_yjs@13.6.14/node_modules/@lexical/react/LexicalOnChangePlugin.prod.esm.js", "../../.pnpm/@lexical+react@0.14.2_lexical@0.14.2_react-dom@18.2.0_react@18.2.0_yjs@13.6.14/node_modules/@lexical/react/LexicalOnChangePlugin.esm.js"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect as useLayoutEffect$1, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect$1 : useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction OnChangePlugin({\n  ignoreHistoryMergeTagChange = true,\n  ignoreSelectionChange = false,\n  onChange\n}) {\n  const [editor] = useLexicalComposerContext();\n  useLayoutEffect(() => {\n    if (onChange) {\n      return editor.registerUpdateListener(({\n        editorState,\n        dirtyElements,\n        dirtyLeaves,\n        prevEditorState,\n        tags\n      }) => {\n        if (ignoreSelectionChange && dirtyElements.size === 0 && dirtyLeaves.size === 0 || ignoreHistoryMergeTagChange && tags.has('history-merge') || prevEditorState.isEmpty()) {\n          return;\n        }\n        onChange(editorState, editor, tags);\n      });\n    }\n  }, [editor, ignoreHistoryMergeTagChange, ignoreSelectionChange, onChange]);\n  return null;\n}\n\nexport { OnChangePlugin };\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport{useLexicalComposerContext as e}from\"@lexical/react/LexicalComposerContext\";import{useLayoutEffect as t,useEffect as r}from\"react\";var o=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?t:r;function i({ignoreHistoryMergeTagChange:t=!0,ignoreSelectionChange:r=!1,onChange:i}){const[n]=e();return o((()=>{if(i)return n.registerUpdateListener((({editorState:e,dirtyElements:o,dirtyLeaves:a,prevEditorState:s,tags:d})=>{r&&0===o.size&&0===a.size||t&&d.has(\"history-merge\")||s.isEmpty()||i(e,n,d)}))}),[n,t,r,i]),null}export{i as OnChangePlugin};\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport * as modDev from './LexicalOnChangePlugin.dev.esm.js';\nimport * as modProd from './LexicalOnChangePlugin.prod.esm.js';\nconst mod = process.env.NODE_ENV === 'development' ? modDev : modProd;\nexport const OnChangePlugin = mod.OnChangePlugin;"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAOA,mBAAgE;AAUhE,IAAM,cAAc,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa,eAAe,OAAO,OAAO,SAAS,kBAAkB;AASxI,IAAM,sBAAsB,cAAc,aAAAA,kBAAoB;AAC9D,IAAI,kBAAkB;AAStB,SAAS,eAAe;AAAA,EACtB,8BAA8B;AAAA,EAC9B,wBAAwB;AAAA,EACxB;AACF,GAAG;AACD,QAAM,CAAC,MAAM,IAAI,0BAA0B;AAC3C,kBAAgB,MAAM;AACpB,QAAI,UAAU;AACZ,aAAO,OAAO,uBAAuB,CAAC;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,MAAM;AACJ,YAAI,yBAAyB,cAAc,SAAS,KAAK,YAAY,SAAS,KAAK,+BAA+B,KAAK,IAAI,eAAe,KAAK,gBAAgB,QAAQ,GAAG;AACxK;AAAA,QACF;AACA,iBAAS,aAAa,QAAQ,IAAI;AAAA,MACpC,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,QAAQ,6BAA6B,uBAAuB,QAAQ,CAAC;AACzE,SAAO;AACT;;;ACrDkF,IAAAC,gBAA+C;AAAQ,IAAI,IAAE,eAAa,OAAO,UAAQ,WAAS,OAAO,YAAU,WAAS,OAAO,SAAS,gBAAc,cAAAC,kBAAE,cAAAC;;;ACE9O,IAAM,MAAM,OAAyC,wCAAS;AACvD,IAAMC,kBAAiB,IAAI;",
  "names": ["useLayoutEffect$1", "import_react", "t", "r", "OnChangePlugin"]
}
